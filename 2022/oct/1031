https://leetcode.cn/problems/matchsticks-to-square/

class Solution {
    public List<Integer> nums;
    public int[] sums;
    public int possibleSquareSide;
    public Solution() {
        this.sums = new int[4];
    }
    public boolean makesquare(int[] matchsticks) {
        int[] nums = matchsticks;
        if (nums == null || nums.length < 4) {
            return false;
        }
        int L = nums.length;
        int sum =0;
        for (int i =0;i < nums.length;i++) {
            sum += nums[i];
        }
        this.possibleSquareSide = sum / 4;
        this.nums = Arrays.stream(nums).boxed().collect(Collectors.toList());
        return this.dfs(0);
    }

    public boolean dfs(int index) {
        if (index ==  this.nums.size()) {
            return sums[0] == sums[1] &&
                    sums[1] == sums[2] &&
                    sums[2] == sums[3];
        }
        int element = this.nums.get(index);
        for (int i =0;i < 4;i++) {
            this.sums[i] += element;
            if (dfs(index+1))   {
                return  true;
            }
            sums[i] -= element;
        }
        return false;
    }
}