https://leetcode.cn/problems/network-delay-time/submissions/

class Solution(object):
    def networkDelayTime(self, times, n, k):
        """
        :type times: List[List[int]]
        :type n: int
        :type k: int
        :rtype: int
        """
        N, K = n,k
        graph = collections.defaultdict(list)
        for u, v ,  w in times:
            graph[u].append((v,w))
        dist = {node: float('inf') for node in range(1,N+1)}
        dist[K] = 0
        visited = [False] * (N+1)
        
        while True:
            cand_node = -1
            cand_dist = float('inf')
            for i in range(1,N+1):
                if not visited[i] and dist[i] < cand_dist:
                    cand_dist = dist[i]
                    cand_node = i
            if cand_node < 0:
                break
            visited[cand_node] = True
            for nei, d in graph[cand_node]:
                dist[nei] = min(dist[nei],dist[cand_node] + d )
        ans = max(dist.values())
        return ans if ans < float('inf') else -1