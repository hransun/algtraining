https://leetcode.cn/problems/count-of-smaller-numbers-after-self/

class Solution {
    public List<Integer> countSmaller(int[] nums) {
        if (nums.length == 0) return Collections.emptyList();
        int max  = Integer.MIN_VALUE;
        int min = Integer.MAX_VALUE;
        for (int  value:nums) {
            if (value < min) {
                min = value;
            }
            if (value > max) {
                max = value;
            }
        }

        for (int  i =0;i < nums.length;i++) {
            nums[i] -= min;
        }
        int[] BITree = new int[max - min+1];
        Integer[] countArr = new Integer[nums.length];
        for (int i = nums.length-1;i >=0; i--) {
            countArr[i] = getSum(nums[i],BITree);
            update(nums[i]+1,BITree );
        }
        return Arrays.asList(countArr);

        
    }

    private int getSum(int value ,  int[]BITree) {
        int sum = 0;
        while (value > 0) {
            sum += BITree[value];
            value &= value -1 ; //change most least  1 to 0
        }
        return sum;
    }

    private void update(int value,int[] BITree) {
        while (value < BITree.length) {
            BITree[value] +=1;
            value += value &  -value;
        }
    }
}