https://leetcode-cn.com/problems/sqrtx/submissions/

class Solution(object):
    def mySqrt(self, x):
        """
        :type x: int
        :rtype: int
        """
        left , right = 0 , x
        while left + 1 < right:
            mid = (left + right) /2
            if mid * mid == x:
                return mid
            elif mid * mid < x :
                left = mid   
           
            else:
                right = mid
        
        if right * right <= x:
            return right
        if left * left <= x :
            return left 

https://leetcode-cn.com/problems/find-peak-element/submissions/

class Solution(object):
    def findPeakElement(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        left , right = 0 , len(nums) -1
        while left + 1 < right:
            mid = (left + right) /2
            if nums[mid] >= nums[mid+1]:
                right = mid
            else:
                left = mid
        if nums[left] > nums[right]:
            return left 
        else:
            return right 

