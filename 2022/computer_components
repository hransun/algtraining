31-深入浅出计算机组成原理 % tree
.

│   
│ 
├── 03-原理篇：处理器 (6讲)
│   ├── 17丨建立数据通路（上）：指令+运算=CPU.html
│   ├── 17丨建立数据通路（上）：指令+运算=CPU.mp3
│   ├── 17丨建立数据通路（上）：指令+运算=CPU.pdf
│   ├── 18丨建立数据通路（中）：指令+运算=CPU.html
│   ├── 18丨建立数据通路（中）：指令+运算=CPU.mp3
│   ├── 18丨建立数据通路（中）：指令+运算=CPU.pdf
│   ├── 19丨建立数据通路（下）：指令+运算=CPU.html
│   ├── 19丨建立数据通路（下）：指令+运算=CPU.mp3
│   ├── 19丨建立数据通路（下）：指令+运算=CPU.pdf
│   ├── 20丨面向流水线的指令设计（上）：一心多用的现代CPU.html
│   ├── 20丨面向流水线的指令设计（上）：一心多用的现代CPU.mp3
│   ├── 20丨面向流水线的指令设计（上）：一心多用的现代CPU.pdf
│   ├── 21丨面向流水线的指令设计（下）：奔腾4是怎么失败的？.html
│   ├── 21丨面向流水线的指令设计（下）：奔腾4是怎么失败的？.mp3
│   ├── 21丨面向流水线的指令设计（下）：奔腾4是怎么失败的？.pdf
│   ├── 22丨冒险和预测（一）：hazard是“危”也是“机”.html
│   ├── 22丨冒险和预测（一）：hazard是“危”也是“机”.mp3
│   ├── 22丨冒险和预测（一）：hazard是“危”也是“机”.pdf
│   ├── 23  冒险和预测（二）：流水线里的接力赛.mp4
│   ├── 23丨冒险和预测（二）：流水线里的接力赛.html
│   ├── 23丨冒险和预测（二）：流水线里的接力赛.pdf
│   ├── 24  冒险和预测（三）：CPU里的“线程池”.mp4
│   ├── 24丨冒险和预测（三）：CPU里的“线程池”.html
│   ├── 24丨冒险和预测（三）：CPU里的“线程池”.pdf
│   ├── 25  冒险和预测（四）：今天下雨了，明天还会下雨么？.mp4
│   ├── 25丨冒险和预测（四）：今天下雨了，明天还会下雨么？.html
│   ├── 25丨冒险和预测（四）：今天下雨了，明天还会下雨么？.pdf
│   ├── 26  Superscalar和VLIW：如何让CPU的吞吐率超过1？.mp4
│   ├── 26丨Superscalar和VLIW：如何让CPU的吞吐率超过1？.html
│   ├── 26丨Superscalar和VLIW：如何让CPU的吞吐率超过1？.pdf
│   ├── 27丨SIMD：如何加速矩阵乘法？.html
│   ├── 27丨SIMD：如何加速矩阵乘法？.mp3
│   ├── 27丨SIMD：如何加速矩阵乘法？.pdf
│   ├── 28  异常和中断：程序出错了怎么办？.mp3
│   ├── 28丨异常和中断：程序出错了怎么办？.html
│   ├── 28丨异常和中断：程序出错了怎么办？.pdf
│   ├── 29丨CISC和RISC：为什么手机芯片都是ARM？.html
│   ├── 29丨CISC和RISC：为什么手机芯片都是ARM？.mp3
│   ├── 29丨CISC和RISC：为什么手机芯片都是ARM？.pdf
│   ├── 30丨GPU（上）：为什么玩游戏需要使用GPU？.html
│   ├── 30丨GPU（上）：为什么玩游戏需要使用GPU？.mp3
│   ├── 30丨GPU（上）：为什么玩游戏需要使用GPU？.pdf
│   ├── 31丨GPU（下）：为什么深度学习需要使用GPU？.html
│   ├── 31丨GPU（下）：为什么深度学习需要使用GPU？.mp3
│   ├── 31丨GPU（下）：为什么深度学习需要使用GPU？.pdf
│   ├── 32丨FPGA、ASIC和TPU（上）：计算机体系结构的黄金时代.html
│   ├── 32丨FPGA、ASIC和TPU（上）：计算机体系结构的黄金时代.mp3
│   ├── 32丨FPGA、ASIC和TPU（上）：计算机体系结构的黄金时代.pdf
│   ├── 33丨解读TPU：设计和拆解一块ASIC芯片.html
│   ├── 33丨解读TPU：设计和拆解一块ASIC芯片.mp3
│   ├── 33丨解读TPU：设计和拆解一块ASIC芯片.pdf
│   ├── 34丨理解虚拟机：你在云上拿到的计算机是什么样的？.html
│   ├── 34丨理解虚拟机：你在云上拿到的计算机是什么样的？.mp3
│   └── 34丨理解虚拟机：你在云上拿到的计算机是什么样的？.pdf
├── 04-原理篇：存储于IO系统(1讲)
│   ├── 35丨存储器层次结构全景：数据存储的大金字塔长什么样？.html
│   ├── 35丨存储器层次结构全景：数据存储的大金字塔长什么样？.mp3
│   ├── 35丨存储器层次结构全景：数据存储的大金字塔长什么样？.pdf
│   ├── 36丨局部性原理：数据库性能跟不上，加个缓存就好了？.html
│   ├── 36丨局部性原理：数据库性能跟不上，加个缓存就好了？.mp3
│   ├── 36丨局部性原理：数据库性能跟不上，加个缓存就好了？.pdf
│   ├── 37丨理解CPUCache（上）：“4毫秒”究竟值多少钱？.html
│   ├── 37丨理解CPUCache（上）：“4毫秒”究竟值多少钱？.mp3
│   ├── 37丨理解CPUCache（上）：“4毫秒”究竟值多少钱？.pdf
│   ├── 38丨高速缓存（下）：你确定你的数据更新了么？.html
│   ├── 38丨高速缓存（下）：你确定你的数据更新了么？.mp3
│   ├── 38丨高速缓存（下）：你确定你的数据更新了么？.pdf
│   ├── 39丨MESI协议：如何让多核CPU的高速缓存保持一致？.html
│   ├── 39丨MESI协议：如何让多核CPU的高速缓存保持一致？.mp3
│   ├── 39丨MESI协议：如何让多核CPU的高速缓存保持一致？.pdf
│   ├── 40丨理解内存（上）：虚拟内存和内存保护是什么？.html
│   ├── 40丨理解内存（上）：虚拟内存和内存保护是什么？.mp3
│   ├── 40丨理解内存（上）：虚拟内存和内存保护是什么？.pdf
│   ├── 41丨理解内存（下）：解析TLB和内存保护.html
│   ├── 41丨理解内存（下）：解析TLB和内存保护.mp3
│   ├── 41丨理解内存（下）：解析TLB和内存保护.pdf
│   ├── 42 丨 总线：计算机内部的高速公路.html
│   ├── 42 丨 总线：计算机内部的高速公路.mp3
│   ├── 42 丨 总线：计算机内部的高速公路.pdf
│   ├── 43 丨 输入输出设备：我们并不是只能用灯泡显示“0”和“1”.html
│   ├── 43 丨 输入输出设备：我们并不是只能用灯泡显示“0”和“1”.mp3
│   ├── 43 丨 输入输出设备：我们并不是只能用灯泡显示“0”和“1”.pdf
│   ├── 44丨O性能到底是怎么回事儿？.html
│   ├── 44丨O性能到底是怎么回事儿？.mp3
│   ├── 44丨O性能到底是怎么回事儿？.pdf
│   ├── 45丨机械硬盘：Google早期用过的“黑科技”.html
│   ├── 45丨机械硬盘：Google早期用过的“黑科技”.mp3
│   ├── 45丨机械硬盘：Google早期用过的“黑科技”.pdf
│   ├── 46丨SSD硬盘（上）：如何完成性能优化的KPI？.html
│   ├── 46丨SSD硬盘（上）：如何完成性能优化的KPI？.mp3
│   ├── 46丨SSD硬盘（上）：如何完成性能优化的KPI？.pdf
│   ├── 47丨SSD硬盘（下）：如何完成性能优化的KPI？.html
│   ├── 47丨SSD硬盘（下）：如何完成性能优化的KPI？.mp3
│   ├── 47丨SSD硬盘（下）：如何完成性能优化的KPI？.pdf
│   ├── 48丨DMA：为什么Kafka这么快？.html
│   ├── 48丨DMA：为什么Kafka这么快？.mp3
│   ├── 48丨DMA：为什么Kafka这么快？.pdf
│   ├── 49丨数据完整性（上）：硬件坏了怎么办？.html
│   ├── 49丨数据完整性（上）：硬件坏了怎么办？.mp3
│   ├── 49丨数据完整性（上）：硬件坏了怎么办？.pdf
│   ├── 50丨数据完整性（下）：如何还原犯罪现场？.html
│   ├── 50丨数据完整性（下）：如何还原犯罪现场？.mp3
│   ├── 50丨数据完整性（下）：如何还原犯罪现场？.pdf
│   ├── 51丨分布式计算：如果所有人的大脑都联网会怎样？.html
│   ├── 51丨分布式计算：如果所有人的大脑都联网会怎样？.mp3
│   └── 51丨分布式计算：如果所有人的大脑都联网会怎样？.pdf
├── 05-应用篇 (5讲)
│   ├── 52丨设计大型DMP系统（上）：MongoDB并不是什么灵丹妙药.html
│   ├── 52丨设计大型DMP系统（上）：MongoDB并不是什么灵丹妙药.mp3
│   ├── 52丨设计大型DMP系统（上）：MongoDB并不是什么灵丹妙药.pdf
│   ├── 53丨设计大型DMP系统（下）：SSD拯救了所有的DBA.html
│   ├── 53丨设计大型DMP系统（下）：SSD拯救了所有的DBA.m4a
│   ├── 53丨设计大型DMP系统（下）：SSD拯救了所有的DBA.pdf
│   ├── 54丨理解Disruptor（上）：带你体会CPU高速缓存的风驰电掣.html
│   ├── 54丨理解Disruptor（上）：带你体会CPU高速缓存的风驰电掣.m4a
│   ├── 54丨理解Disruptor（上）：带你体会CPU高速缓存的风驰电掣.pdf
│   ├── 55丨理解Disruptor（下）：不需要换挡和踩刹车的CPU，有多快？.html
│   ├── 55丨理解Disruptor（下）：不需要换挡和踩刹车的CPU，有多快？.m4a
│   ├── 55丨理解Disruptor（下）：不需要换挡和踩刹车的CPU，有多快？.pdf
│   ├── 结束语丨知也无涯，愿你也享受发现的乐趣.html
│   ├── 结束语丨知也无涯，愿你也享受发现的乐趣.m4a
│   └── 结束语丨知也无涯，愿你也享受发现的乐趣.pdf
└── 06-加餐 (1讲)
    ├── FAQ第二期丨世界上第一个编程语言是怎么来的？.html
    ├── FAQ第二期丨世界上第一个编程语言是怎么来的？.m4a
    ├── FAQ第二期丨世界上第一个编程语言是怎么来的？.pdf
    ├── FAQ第一期丨学与不学，知识就在那里，不如就先学好了.html
    ├── FAQ第一期丨学与不学，知识就在那里，不如就先学好了.m4a
    ├── FAQ第一期丨学与不学，知识就在那里，不如就先学好了.pdf
    ├── 特别加餐丨我在2019年F8大会的两日见闻录.html
    ├── 特别加餐丨我在2019年F8大会的两日见闻录.mp3
    ├── 特别加餐丨我在2019年F8大会的两日见闻录.pdf
    ├── 特别加餐丨我的一天怎么过？.html
    ├── 特别加餐丨我的一天怎么过？.m4a
    ├── 特别加餐丨我的一天怎么过？.pdf
    ├── 用户故事丨赵文海：怕什么真理无穷，进一寸有一寸的欢喜.html
    ├── 用户故事丨赵文海：怕什么真理无穷，进一寸有一寸的欢喜.m4a
    └── 用户故事丨赵文海：怕什么真理无穷，进一寸有一寸的欢喜.pdf