2.5.3 用最少数量的箭引爆气球

https://leetcode.cn/problems/minimum-number-of-arrows-to-burst-balloons/

class Solution {
    public int findMinArrowShots(int[][] points) {
        if (points.length ==0) {
            return 0;
        }
        Arrays.sort(points, new Comparator<int[]>() {
            @Override
            public int compare(int[] o1, int[] o2) {
                if (o1[1] > o2[1]) {
                    return 1;
                } else if (o1[1] < o2[1]) {
                    return -1;
                }
                else {
                    return 0;

                }

            }
        });

        int pos = points[0][1];
        int ans = 1;
        for (int[] balloon: points) {
            if (balloon[0] > pos) {
                pos = balloon[1];
                ++ans;
            }
        }
        return ans;

    }
}

2.5.4 移掉K位数字

https://leetcode.cn/problems/remove-k-digits/

class Solution {
    public String removeKdigits(String num, int k) {
        LinkedList<Character> stack = new LinkedList<>();

        for (char digit : num.toCharArray()) {
            while (stack.size() >0 && k >0 && stack.peekLast() > digit) {
                stack.removeLast();
                k--;
            }
            stack.addLast(digit);
        }
        for (int i =0;i < k; ++i) {
            stack.removeLast();
        }
        StringBuilder ret = new StringBuilder();
        boolean leadingZero = true;
        for (char digit: stack) {
            if (leadingZero && digit =='0') continue;
            leadingZero = false;
            ret.append(digit);
        }
        if (ret.length()==0) return "0";
        return ret.toString();

    }
}



2.6.1 使括号有效的最少添加

2.6.2 不含 AAA 或 BBB 的字符串

2.6.4 检查一个字符串是否可以打破另一个字符串