https://leetcode.cn/problems/maximum-sum-circular-subarray/submissions/

class Solution(object):
    def maxSubarraySumCircular(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        n = len(nums)
        nums = [0] + nums
        s = [ 0 for i in range(n+1)]
        for i in range(1, n+1):
            s[i] = s[i-1] + nums[i]
        tmp = 10**9
        ans = float('-inf')
        for i in range(1,n+1):
            tmp = min(tmp, s[i-1])
            ans = max(ans, s[i] - tmp)
        tmp = -10**9
        ans_min = 10**9
        for i in range(2, n+1):
            tmp = max(tmp,s[i-1])
            ans_min = min(ans_min, s[i] - tmp)
        
        return max(ans, s[n]- ans_min)