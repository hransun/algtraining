https://leetcode.cn/problems/house-robber-ii/

class Solution(object):
    def rob(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        nums = [0] + nums
        if len(nums) ==2:
            return nums[1]
        dp = [[float('-inf')]* 2 for _ in range(len(nums))]
        ans =0
        dp[1][0] = 0
        for i in range(2, len(nums)):
            for j in range(2):
                dp[i][0] = max(dp[i-1][0], dp[i-1][1])
                dp[i][1] = dp[i-1][0] + nums[i]
        ans = max(dp[-1][0], dp[-1][1])

        dp[1][0]=0
        dp[1][1]= nums[1]
        for i in range(2, len(nums)):
            for j in range(2):
                dp[i][0] = max(dp[i-1][0], dp[i-1][1])
                dp[i][1] = dp[i-1][0] + nums[i]
        ans = max(ans, dp[-1][0])
        return ans
