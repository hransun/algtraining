319
https://leetcode.com/problems/bulb-switcher/

470

https://leetcode.com/problems/implement-rand10-using-rand7/description/
321
https://leetcode.com/problems/create-maximum-number/

312
https://leetcode.com/problems/burst-balloons/

class Solution {
    public int maxCoins(int[] nums) {
        int n = nums.length;
        // add dummy 1 in both end of arr
        int[] points = new int[n+2];
        points[0] = points[n+1] = 1;
        for (int i = 1; i <=n; i++) {
            points[i] = nums[i-1];
        }
        int[][] dp = new int[n+2][n+2];
        // bottom up
        // i from right to left
        for (int i = n; i >=0 ; i--) {
            //  j from left to right
            for (int j = i+1; j < n+2; j++) {
                for (int k = i+1; k <j ; k++) {
                    dp[i][j] = Math.max(
                            dp[i][j],
                            dp[i][k] + dp[k][j] + points[i]*points[j]*points[k]
                    );
                }
            }
        }
        // from 1- n
        return dp[0][n+1];

        
    }
}
